-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2020-12-27 14:31:17 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE analize (
    id_analiza              NUMBER(7) NOT NULL,
    tip                     VARCHAR2(20) NOT NULL,
    data_recoltare          DATE NOT NULL,
    data_rezultat           DATE NOT NULL,
    cabinete_id_cabinet     NUMBER(7) NOT NULL,
    medici_lab_id_medic     NUMBER(7) NOT NULL,
    asistente_id_asistenta  NUMBER(7) NOT NULL,
    pret                    NUMBER(3) NOT NULL
);

ALTER TABLE analize
    ADD CONSTRAINT tip_ck CHECK ( tip IN ( 'Anemie', 'Biochimie', 'Citologie', 'Coagulare', 'Electroforeza',
                                           'Generale', 'Hematologie', 'Hepatice', 'Imunologie',
                                           'Standard' ) );

ALTER TABLE analize ADD CONSTRAINT data_rez_ck CHECK ( data_rezultat >= data_recoltare );

ALTER TABLE analize ADD CONSTRAINT pret_fk CHECK ( pret > 0 );

ALTER TABLE analize ADD CONSTRAINT analize_pk PRIMARY KEY ( id_analiza );

CREATE TABLE asistente (
    id_asistenta           NUMBER(7) NOT NULL,
    nume_a                 VARCHAR2(20) NOT NULL,
    prenume_a              VARCHAR2(20) NOT NULL,
    contracte_id_contract  NUMBER(7) NOT NULL
);

CREATE UNIQUE INDEX asistente__idx ON
    asistente (
        contracte_id_contract
    ASC );

ALTER TABLE asistente ADD CONSTRAINT asistente_pk PRIMARY KEY ( id_asistenta );

CREATE TABLE cabinete (
    id_cabinet  NUMBER(7) NOT NULL,
    denumire    VARCHAR2(40) NOT NULL,
    adresa      VARCHAR2(40) NOT NULL,
    nr_telefon  NUMBER(10) NOT NULL
);

ALTER TABLE cabinete
    ADD CONSTRAINT nr_telefon_ck CHECK ( length(to_char(nr_telefon)) = 10
                                         AND substr(to_char(nr_telefon), 1, 1) = '0'
                                         OR substr(to_char(nr_telefon), 2, 1) = '2'
                                         OR substr(to_char(nr_telefon), 2, 1) = '3'
                                         OR substr(to_char(nr_telefon), 2, 1) = '7' );

ALTER TABLE cabinete ADD CONSTRAINT cabinete_pk PRIMARY KEY ( id_cabinet );

CREATE TABLE contracte (
    id_contract          NUMBER(7) NOT NULL,
    data_start           DATE NOT NULL,
    data_end             DATE,
    nr_luni              NUMBER(2) NOT NULL,
    cabinete_id_cabinet  NUMBER(7) NOT NULL
);

ALTER TABLE contracte ADD CONSTRAINT data_end_ck CHECK ( data_end > data_start );

ALTER TABLE contracte
    ADD CONSTRAINT c_nr_luni_ck CHECK ( nr_luni >= 12
                                        AND mod(nr_luni, 6) = 0 );

ALTER TABLE contracte ADD CONSTRAINT contracte_pk PRIMARY KEY ( id_contract );

CREATE TABLE detalii (
    id_detalii          NUMBER(7) NOT NULL,
    nume_d              VARCHAR2(40) NOT NULL,
    val_min             NUMBER(4) NOT NULL,
    val_max             NUMBER(4) NOT NULL,
    analize_id_analiza  NUMBER(7) NOT NULL
);

ALTER TABLE detalii
    ADD CONSTRAINT num_d_ck CHECK ( nume_d IN ( 'ASLO', 'Albumine', 'Amilazuria', 'Calciu', 'Cortisol',
                                                'Fibrinogen', 'Fier', 'GGT', 'Glicemie', 'Hematocit',
                                                'Hemoglobina',
                                                'Magneziu',
                                                'PTH',
                                                'Sideremia',
                                                'Spermograma',
                                                'TGO',
                                                'TGP',
                                                'Tireoglobulina',
                                                'Trigliceride',
                                                'VSH' ) );

ALTER TABLE detalii ADD CONSTRAINT min_ck CHECK ( val_min >= 0 );

ALTER TABLE detalii ADD CONSTRAINT max_ck CHECK ( val_max > val_min );

CREATE UNIQUE INDEX detalii__idx ON
    detalii (
        analize_id_analiza
    ASC );

ALTER TABLE detalii ADD CONSTRAINT detalii_pk PRIMARY KEY ( id_detalii );

CREATE TABLE medici_lab (
    id_medic               NUMBER(7) NOT NULL,
    nume_m                 VARCHAR2(20) NOT NULL,
    prenume_m              VARCHAR2(20) NOT NULL,
    contracte_id_contract  NUMBER(7) NOT NULL
);

CREATE UNIQUE INDEX medici_lab__idx ON
    medici_lab (
        contracte_id_contract
    ASC );

ALTER TABLE medici_lab ADD CONSTRAINT medici_lab_pk PRIMARY KEY ( id_medic );

CREATE TABLE pacienti (
    id_pacient     NUMBER(7) NOT NULL,
    nume_p         VARCHAR2(20) NOT NULL,
    prenume_p      VARCHAR2(20) NOT NULL,
    data_nasterii  DATE NOT NULL,
    cnp            VARCHAR2(13) NOT NULL,
    varsta         NUMBER(3) NOT NULL,
    gen            CHAR(1) NOT NULL,
    adresa         VARCHAR2(40)
);

ALTER TABLE pacienti
    ADD CONSTRAINT cnp_ck CHECK ( length(cnp) = 13 );

ALTER TABLE pacienti ADD CONSTRAINT v_ck CHECK ( varsta > 0 );

ALTER TABLE pacienti
    ADD CONSTRAINT gen_ck CHECK ( gen IN ( 'F', 'M' ) );

ALTER TABLE pacienti ADD CONSTRAINT pacienti_pk PRIMARY KEY ( id_pacient );

ALTER TABLE pacienti ADD CONSTRAINT pacienti_cnp_un UNIQUE ( cnp );

CREATE TABLE pacienti_analize (
    pacienti_id_pacient  NUMBER(7) NOT NULL,
    analize_id_analiza   NUMBER(7) NOT NULL
);

ALTER TABLE pacienti_analize ADD CONSTRAINT pac_a_fk_pk PRIMARY KEY ( pacienti_id_pacient,
                                                                      analize_id_analiza );

CREATE TABLE pacienti_detalii (
    detalii_id_detalii   NUMBER(7) NOT NULL,
    pacienti_id_pacient  NUMBER(7) NOT NULL,
    rezultat             NUMBER(4) NOT NULL
);

ALTER TABLE pacienti_detalii ADD CONSTRAINT rez_fk CHECK ( rezultat > 0 );

ALTER TABLE pacienti_detalii ADD CONSTRAINT pac_det_fk_pk PRIMARY KEY ( detalii_id_detalii,
                                                                        pacienti_id_pacient );

ALTER TABLE analize
    ADD CONSTRAINT analize_asistente_fk FOREIGN KEY ( asistente_id_asistenta )
        REFERENCES asistente ( id_asistenta );

ALTER TABLE analize
    ADD CONSTRAINT analize_cabinete_fk FOREIGN KEY ( cabinete_id_cabinet )
        REFERENCES cabinete ( id_cabinet );

ALTER TABLE analize
    ADD CONSTRAINT analize_medici_lab_fk FOREIGN KEY ( medici_lab_id_medic )
        REFERENCES medici_lab ( id_medic );

ALTER TABLE asistente
    ADD CONSTRAINT asistente_contracte_fk FOREIGN KEY ( contracte_id_contract )
        REFERENCES contracte ( id_contract );

ALTER TABLE contracte
    ADD CONSTRAINT contracte_cabinete_fk FOREIGN KEY ( cabinete_id_cabinet )
        REFERENCES cabinete ( id_cabinet );

ALTER TABLE detalii
    ADD CONSTRAINT detalii_analize_fk FOREIGN KEY ( analize_id_analiza )
        REFERENCES analize ( id_analiza );

ALTER TABLE medici_lab
    ADD CONSTRAINT medici_lab_contracte_fk FOREIGN KEY ( contracte_id_contract )
        REFERENCES contracte ( id_contract );

ALTER TABLE pacienti_analize
    ADD CONSTRAINT pac_a_fk_analize_fk FOREIGN KEY ( analize_id_analiza )
        REFERENCES analize ( id_analiza );

ALTER TABLE pacienti_analize
    ADD CONSTRAINT pac_a_fk_pacienti_fk FOREIGN KEY ( pacienti_id_pacient )
        REFERENCES pacienti ( id_pacient );

ALTER TABLE pacienti_detalii
    ADD CONSTRAINT pac_det_fk_detalii_fk FOREIGN KEY ( detalii_id_detalii )
        REFERENCES detalii ( id_detalii );

ALTER TABLE pacienti_detalii
    ADD CONSTRAINT pac_det_fk_pacienti_fk FOREIGN KEY ( pacienti_id_pacient )
        REFERENCES pacienti ( id_pacient );

CREATE SEQUENCE analize_id_analiza_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER analize_id_analiza_trg BEFORE
    INSERT ON analize
    FOR EACH ROW
    WHEN ( new.id_analiza IS NULL )
BEGIN
    :new.id_analiza := analize_id_analiza_seq.nextval;
END;
/

CREATE SEQUENCE asistente_id_asistenta_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER asistente_id_asistenta_trg BEFORE
    INSERT ON asistente
    FOR EACH ROW
    WHEN ( new.id_asistenta IS NULL )
BEGIN
    :new.id_asistenta := asistente_id_asistenta_seq.nextval;
END;
/

CREATE SEQUENCE cabinete_id_cabinet_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cabinete_id_cabinet_trg BEFORE
    INSERT ON cabinete
    FOR EACH ROW
    WHEN ( new.id_cabinet IS NULL )
BEGIN
    :new.id_cabinet := cabinete_id_cabinet_seq.nextval;
END;
/

CREATE SEQUENCE contracte_id_contract_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER contracte_id_contract_trg BEFORE
    INSERT ON contracte
    FOR EACH ROW
    WHEN ( new.id_contract IS NULL )
BEGIN
    :new.id_contract := contracte_id_contract_seq.nextval;
END;
/

CREATE SEQUENCE detalii_id_detalii_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER detalii_id_detalii_trg BEFORE
    INSERT ON detalii
    FOR EACH ROW
    WHEN ( new.id_detalii IS NULL )
BEGIN
    :new.id_detalii := detalii_id_detalii_seq.nextval;
END;
/

CREATE SEQUENCE medici_lab_id_medic_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER medici_lab_id_medic_trg BEFORE
    INSERT ON medici_lab
    FOR EACH ROW
    WHEN ( new.id_medic IS NULL )
BEGIN
    :new.id_medic := medici_lab_id_medic_seq.nextval;
END;
/

CREATE SEQUENCE pacienti_id_pacient_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pacienti_id_pacient_trg BEFORE
    INSERT ON pacienti
    FOR EACH ROW
    WHEN ( new.id_pacient IS NULL )
BEGIN
    :new.id_pacient := pacienti_id_pacient_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             9
-- CREATE INDEX                             3
-- ALTER TABLE                             34
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           7
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          7
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
